{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./TypingChallenge.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TypingChallenge(_ref){let{onComplete}=_ref;const[input,setInput]=useState('');const[errors,setErrors]=useState([]);const[showError,setShowError]=useState(false);const text=\"I acknowledge that I'm making this request thoughtfully and not impulsively.\";// Calculate accuracy percentage\nconst calculateAccuracy=()=>{if(input.length===0)return 0;const correctChars=input.split('').filter((char,i)=>char===text[i]).length;return Math.floor(correctChars/input.length*100);};// Check for errors in real-time\nuseEffect(()=>{const newErrors=[];input.split('').forEach((char,index)=>{if(char!==text[index]){newErrors.push(index);}});setErrors(newErrors);setShowError(newErrors.length>0);},[input]);const handleInput=e=>{const newValue=e.target.value;setInput(newValue);// Check if the entire text matches\nif(newValue===text){setTimeout(()=>onComplete(),500);// Small delay for feedback\n}};// Split text into characters for highlighting\nconst renderText=()=>{return text.split('').map((char,index)=>{let className='';if(index<input.length){className=input[index]===char?'correct':'incorrect';}return/*#__PURE__*/_jsx(\"span\",{className:className,children:char},index);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"typing-challenge\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sample-text\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Please type the following text:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-display\",children:renderText()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-container\",children:/*#__PURE__*/_jsx(\"textarea\",{value:input,onChange:handleInput,placeholder:\"Start typing here...\",className:showError?'has-error':'',rows:3})}),/*#__PURE__*/_jsxs(\"div\",{className:\"typing-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Progress:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(input.length/text.length*100,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Accuracy:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateAccuracy(),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Characters:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[input.length,\"/\",text.length]})]})]}),showError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:\"Please correct the errors to proceed\"})]});}export default TypingChallenge;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TypingChallenge","_ref","onComplete","input","setInput","errors","setErrors","showError","setShowError","text","calculateAccuracy","length","correctChars","split","filter","char","i","Math","floor","newErrors","forEach","index","push","handleInput","e","newValue","target","value","setTimeout","renderText","map","className","children","onChange","placeholder","rows","style","width","concat"],"sources":["/Users/danielberhane/Desktop/automatic/password-guardian/password-guardian/src/components/TypingChallenge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TypingChallenge.css';\n\nfunction TypingChallenge({ onComplete }) {\n  const [input, setInput] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [showError, setShowError] = useState(false);\n\n  const text = \"I acknowledge that I'm making this request thoughtfully and not impulsively.\";\n  \n  // Calculate accuracy percentage\n  const calculateAccuracy = () => {\n    if (input.length === 0) return 0;\n    const correctChars = input.split('').filter((char, i) => char === text[i]).length;\n    return Math.floor((correctChars / input.length) * 100);\n  };\n\n  // Check for errors in real-time\n  useEffect(() => {\n    const newErrors = [];\n    input.split('').forEach((char, index) => {\n      if (char !== text[index]) {\n        newErrors.push(index);\n      }\n    });\n    setErrors(newErrors);\n    setShowError(newErrors.length > 0);\n  }, [input]);\n\n  const handleInput = (e) => {\n    const newValue = e.target.value;\n    setInput(newValue);\n\n    // Check if the entire text matches\n    if (newValue === text) {\n      setTimeout(() => onComplete(), 500); // Small delay for feedback\n    }\n  };\n\n  // Split text into characters for highlighting\n  const renderText = () => {\n    return text.split('').map((char, index) => {\n      let className = '';\n      if (index < input.length) {\n        className = input[index] === char ? 'correct' : 'incorrect';\n      }\n      return (\n        <span key={index} className={className}>\n          {char}\n        </span>\n      );\n    });\n  };\n\n  return (\n    <div className=\"typing-challenge\">\n      <div className=\"sample-text\">\n        <p>Please type the following text:</p>\n        <div className=\"text-display\">{renderText()}</div>\n      </div>\n\n      <div className=\"input-container\">\n        <textarea\n          value={input}\n          onChange={handleInput}\n          placeholder=\"Start typing here...\"\n          className={showError ? 'has-error' : ''}\n          rows={3}\n        />\n      </div>\n\n      <div className=\"typing-stats\">\n        <div className=\"stat\">\n          <span>Progress:</span>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${(input.length / text.length) * 100}%` }}\n            />\n          </div>\n        </div>\n        <div className=\"stat\">\n          <span>Accuracy:</span>\n          <span>{calculateAccuracy()}%</span>\n        </div>\n        <div className=\"stat\">\n          <span>Characters:</span>\n          <span>{input.length}/{text.length}</span>\n        </div>\n      </div>\n\n      {showError && (\n        <div className=\"error-message\">\n          Please correct the errors to proceed\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TypingChallenge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}